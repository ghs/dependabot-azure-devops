name: Server

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags: ['*']
    paths:
      - 'server/**'
      - '.github/workflows/server.yml'
  pull_request:
    branches: [main]
    paths:
      - 'server/**'
      - '.github/workflows/server.yml'

permissions:
  contents: write # write required for ncipollo/release-action to create a release
  packages: write
  attestations: write # required for actions/attest-build-provenance
  id-token: write # required for actions/attest-build-provenance

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # wait for previous runs to complete on main and tags
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/') }}

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

  GITHUB_SHA: ${{ github.sha }} # not discovered by default
  GITHUB_REF_NAME: ${{ github.ref_name }} # not discovered by default

jobs:
  Server:
    runs-on: ubuntu-latest
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      IMAGE_NAME: 'dependabot-server'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for GitVersion

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v3
        id: gitversion
        with:
          useConfigFile: true

      - name: Test
        run: dotnet test -c Release --collect "Code coverage"

      - name: Publish
        run: |
          dotnet publish \
          ${{ github.workspace }}/server/Tingle.Dependabot/Tingle.Dependabot.csproj \
          -c Release \
          -o ${{ github.workspace }}/drop/Tingle.Dependabot

      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["${{ github.workspace }}/server/main.bicep"]'
        env:
          IMAGE_TAG: ${{ steps.gitversion.outputs.fullSemVer }}

      - name: Build bicep file
        uses: azure/cli@v2
        with:
          inlineScript: |
            tdnf install -y icu
            tdnf install -y jq
            cp ${{ github.workspace }}/server/main.bicep ${{ github.workspace }}/drop/main.bicep && \
            az bicep build --file server/main.bicep --outfile ${{ github.workspace }}/drop/main.json

      - name: Upload Artifact (drop)
        uses: actions/upload-artifact@v4
        with:
          path: ${{ github.workspace }}/drop/*
          name: drop

      - name: Create deploy folder
        run: |
          mkdir -p deploy
          cp ${{ github.workspace }}/server/main.bicep ${{ github.workspace }}/deploy/main.bicep
          cp ${{ github.workspace }}/server/main.parameters.json ${{ github.workspace }}/deploy/main.parameters.json

      - name: Replace tokens in deploy folder
        uses: cschleiden/replace-tokens@v1
        with:
          files: '["${{ github.workspace }}/deploy/main.parameters.json"]'
        env:
          DOCKER_IMAGE_TAG: ${{ steps.gitversion.outputs.shortSha }}
          DEPENDABOT_PROJECT_TOKEN: ${{ secrets.DEPENDABOT_PROJECT_TOKEN }}
          DEPENDABOT_GITHUB_TOKEN: ${{ secrets.DEPENDABOT_GITHUB_TOKEN }}

      - name: Upload Artifact (deploy)
        uses: actions/upload-artifact@v4
        with:
          path: deploy
          name: deploy
          retention-days: 1

      - name: Compute Docker Tags
        id: docker_tags
        uses: mburumaxwell/actions/compute-docker-tags@main
        with:
          image: 'ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}'
          short_sha: ${{ steps.gitversion.outputs.shortSha }}
          full_semver: ${{ steps.gitversion.outputs.fullSemVer }}
          major: ${{ steps.gitversion.outputs.major }}
          minor: ${{ steps.gitversion.outputs.minor }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry
        if: ${{ !startsWith(github.ref, 'refs/pull') }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}/drop/Tingle.Dependabot
          file: server/Tingle.Dependabot/Dockerfile.CI
          platforms: linux/amd64,linux/arm64
          push: ${{ !startsWith(github.ref, 'refs/pull') }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline # sets BUILDKIT_INLINE_CACHE=1
          tags: ${{ steps.docker_tags.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.gitversion.outputs.fullSemVer }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            com.github.image.run.id=${{ github.run_id }}
            com.github.image.run.number=${{ github.run_number }}
            com.github.image.job.id=${{ github.job }}
            com.github.image.source.sha=${{ github.sha }}
            com.github.image.source.branch=${{ github.ref }}

      - name: Provenance Attestation
        uses: actions/attest-build-provenance@v2
        # Only if we have pushed the image (otherwise the digest is not available)
        if: ${{ !startsWith(github.ref, 'refs/pull') }}
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifacts: >
            ${{ github.workspace }}/drop/main.bicep,
            ${{ github.workspace }}/drop/main.json
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          allowUpdates: true

  #   - name: Azure Login
  #     if: ${{ (github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags') }}
  #     uses: azure/login@v2
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   - name: Deploy
  #     if: ${{ (github.ref == 'refs/heads/main') || startsWith(github.ref, 'refs/tags') }}
  #     uses: azure/arm-deploy@v2
  #     with:
  #       subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
  #       resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
  #       template: '${{ github.workspace }}/deploy/main.bicep'
  #       parameters: '${{ github.workspace }}/deploy/main.parameters.json'
  #       scope: 'resourcegroup'
